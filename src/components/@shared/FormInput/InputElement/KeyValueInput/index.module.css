.pairsContainer {
  display: grid;
  grid-template-columns: 1fr 1fr auto;
  gap: calc(var(--spacer) / 4);
  margin-bottom: var(--spacer);
  position: relative;
  align-items: end;
}

.pairsAddedContainer {
  display: grid;
  grid-template-columns: 1fr 1fr auto;
  gap: var(--sp-2_5);
  margin-bottom: var(--spacer);
  align-items: end;
}

.pairsAddedContainer > button {
  min-width: 90px !important;
  display: flex;
  align-items: center;
  justify-content: center;
}

.hasError label {
  color: var(--brand-alert-red);
}

.hasError .pairsContainer .keyInput,
.hasError .pairsContainer .keyInput:focus,
.hasError .pairsContainer [class*='prefix'],
.hasError .pairsContainer [class*='postfix'] {
  color: var(--brand-alert-red);
  border-color: var(--brand-alert-red);
}

.required {
  composes: required from '../../index.module.css';
}

.error {
  composes: error from '../../index.module.css';
  top: 100%;
}

.pairsContainer .addButton {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 9px 14px;
  gap: 4px;
  height: 40px;
  background: var(--publish-accent-gradient);
  box-shadow: var(--publish-shadow-sm);
  border-radius: 20px;
  border: none;
  font-family: var(--publish-font-family);
  font-weight: var(--publish-font-weight-bold);
  font-size: var(--publish-font-size);
  color: var(--publish-primary);
  cursor: pointer;
  text-transform: uppercase;
  min-width: auto;
}

.pairsContainer .addButton:hover,
.pairsContainer .addButton:focus {
  background: var(--publish-accent-gradient);
  transform: none;
  box-shadow: var(--publish-shadow-sm);
}

.addButton .addIcon {
  width: 16px;
  height: 16px;
  fill: #0a4b70;
}

.addButton .addIcon path {
  fill: #0a4b70;
}
