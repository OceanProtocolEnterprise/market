.field {
  /* margin-bottom: calc(var(--spacer) * var(--line-height) + 20px); */
  margin: 10px;
  position: relative;
}

.field[data-is-submitting] {
  pointer-events: none;
  opacity: 0.4;
}

.field .field {
  margin-bottom: calc(var(--spacer) / 2);
}

.required {
  font-size: var(--font-size-base);
  color: var(--input-error-text-color);
  display: inline-block;
  margin-left: 0.1rem;
}

.error {
  display: block;
  font-family: var(--font-family-base);
  font-weight: var(--font-weight-bold);
  font-size: 10px;
  color: var(--input-error-text-color);
  line-height: 1.2;
  position: absolute;
  top: 105%;
  left: 0;
  right: auto;
  z-index: 1;
}

.error.centerError {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  gap: var(--sp-1_5);
  position: absolute;
  bottom: -30px;
  left: 40px;
  right: auto;
}

.hasError label {
  color: var(--input-error-text-color);
}

body .hasError input,
body .hasError input:focus,
body .hasError select,
body .hasError textarea,
body .hasError [class*='prefix'],
body .hasError [class*='postfix'] {
  border-color: var(--input-error-border-color) !important;
  box-shadow: none !important;
}

.errorIcon {
  width: 16px;
  height: 16px;
  margin: 0;
}

/* Row-level error spacing - apply to row containers when any field has errors */
.rowWithErrors {
  margin-bottom: calc(var(--spacer) * var(--line-height) + 20px) !important;
}

/* Automatic detection: if a flex row contains any field with errors, add spacing 
   Note: :has() is supported in modern browsers (Chrome 105+, Firefox 103+, Safari 15.4+) */
:global(.formRow):has(.hasError),
:global(.pairsContainer):has(.hasError),
:global(.inputRow):has(.hasError),
:global(.argumentRow):has(.hasError),
:global(.ruleRow):has(.hasError) {
  margin-bottom: calc(var(--spacer) * var(--line-height) + 20px) !important;
}
